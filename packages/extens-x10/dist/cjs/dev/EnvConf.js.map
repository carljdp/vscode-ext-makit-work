{"version":3,"sources":["../../../src/dev/EnvConf.js"],"sourceRoot":"./","sourcesContent":["// file: dev/EnvConf.js\r\n/**\r\n * -------------------------------------------------------------------------- *\r\n * NOTE: This file is intentionally a plain JavaScript file, so that it can   *\r\n *        be used in both the NodeJS and Webpack config files.                 *\r\n * -------------------------------------------------------------------------- *\r\n * \r\n * @module EnvConf\r\n * \r\n * @fileoverview Environment variables are used to determine the current \r\n *  environment of the application, for both the build and runtime \r\n *  environments.\r\n * \r\n * We attempt to parse the following environment variables:\r\n * \r\n * - `NODE_ENV`: A NodeJS environment variable, indicating the current \r\n *     environment\r\n * \r\n * - `DEBUG`: Our own custom environment variable, indicating whether debug\r\n *     mode is enabled\r\n * \r\n */\r\n\r\n\r\n/** @typedef { (env: NodeJS.ProcessEnv) => boolean } EnvParseFn */\r\n\r\n/** @type {boolean} */\r\nconst _isDebug_ = (/** @type {EnvParseFn} */(env) => {\r\n    const originalValue = JSON.stringify(process.env.DEBUG || '')\r\n        .replace(/['\"]+/g, '').trim();\r\n    const lowerValue = originalValue.toLowerCase();\r\n    const truthy = ['true', '1', 'on', 'y', 'yes', 'enable', 'enabled'];\r\n    const falsy = ['false', '0', 'off', 'n', 'no', 'disable', 'disabled'];\r\n    const isTruthy = truthy.includes(lowerValue);\r\n    const isFalsy = falsy.includes(lowerValue);\r\n    return (isTruthy && !isFalsy);\r\n})(process.env);\r\n\r\n/** @type {boolean} */\r\nconst _isDev_ = (/** @type {EnvParseFn} */(env) => {\r\n    const value = JSON.stringify(process.env.NODE_ENV || '')\r\n        .replace(/['\"]+/g, '').trim();\r\n    return ['development', 'develop', 'dev'].includes(value.toLowerCase());\r\n})(process.env);\r\n\r\n/** @type {boolean} */\r\nconst _isProd_ = (/** @type {EnvParseFn} */(env) => {\r\n    const value = JSON.stringify(process.env.NODE_ENV || '')\r\n        .replace(/['\"]+/g, '').trim();\r\n    return ['production', 'prod'].includes(value.toLowerCase());\r\n})(process.env);\r\n\r\n\r\n// Quick polyfill for NodeJS assert module\r\nconst assert = {\r\n    ok: (/** @type {any} */ value, /** @type {string | undefined} */ message) => {\r\n        if (!value) {\r\n            throw new Error(message);\r\n        }\r\n    }\r\n};\r\n\r\nassert.ok(((_isDebug_ === true) || (_isDebug_ === false)),\r\n    `[Environment] Parse error: Environment variable: 'DEBUG'`);\r\n\r\nassert.ok(((_isDev_ === true) || (_isDev_ === false)),\r\n    `[Environment] Parse error: Environment variable: 'NODE_ENV'`);\r\n\r\nassert.ok(((_isProd_ === true) || (_isProd_ === false)),\r\n    `[Environment] Parse error: Environment variable: 'NODE_ENV'`);\r\n\r\nassert.ok((_isProd_ && _isDev_) === false,\r\n    `[Environment] Combination error: Environment variable: ` +\r\n    `'NODE_ENV'`);\r\n\r\nassert.ok((_isProd_ && _isDebug_) === false,\r\n    `[Environment] Combination error: Environment variables: ` +\r\n    `'NODE_ENV', 'DEBUG'`);\r\n\r\n\r\nmodule.exports = {\r\n    _isDebug_,\r\n    _isDev_,\r\n    _isProd_,\r\n};"],"names":["_isDebug_","env","originalValue","JSON","stringify","process","DEBUG","replace","trim","lowerValue","toLowerCase","truthy","falsy","isTruthy","includes","isFalsy","_isDev_","value","NODE_ENV","_isProd_","assert","ok","message","Error","module","exports"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,uBAAuB;AACvB;;;;;;;;;;;;;;;;;;;;CAoBC,GAGD,gEAAgE,GAEhE,oBAAoB;AACpB,MAAMA,YAAY,AAAC,uBAAuB,GAAE,CAAA,CAACC;IACzC,MAAMC,gBAAgBC,KAAKC,SAAS,CAACC,QAAQJ,GAAG,CAACK,KAAK,IAAI,IACrDC,OAAO,CAAC,UAAU,IAAIC,IAAI;IAC/B,MAAMC,aAAaP,cAAcQ,WAAW;IAC5C,MAAMC,SAAS;QAAC;QAAQ;QAAK;QAAM;QAAK;QAAO;QAAU;KAAU;IACnE,MAAMC,QAAQ;QAAC;QAAS;QAAK;QAAO;QAAK;QAAM;QAAW;KAAW;IACrE,MAAMC,WAAWF,OAAOG,QAAQ,CAACL;IACjC,MAAMM,UAAUH,MAAME,QAAQ,CAACL;IAC/B,OAAQI,YAAY,CAACE;AACzB,CAAA,EAAGV,QAAQJ,GAAG;AAEd,oBAAoB,GACpB,MAAMe,UAAU,AAAC,uBAAuB,GAAE,CAAA,CAACf;IACvC,MAAMgB,QAAQd,KAAKC,SAAS,CAACC,QAAQJ,GAAG,CAACiB,QAAQ,IAAI,IAChDX,OAAO,CAAC,UAAU,IAAIC,IAAI;IAC/B,OAAO;QAAC;QAAe;QAAW;KAAM,CAACM,QAAQ,CAACG,MAAMP,WAAW;AACvE,CAAA,EAAGL,QAAQJ,GAAG;AAEd,oBAAoB,GACpB,MAAMkB,WAAW,AAAC,uBAAuB,GAAE,CAAA,CAAClB;IACxC,MAAMgB,QAAQd,KAAKC,SAAS,CAACC,QAAQJ,GAAG,CAACiB,QAAQ,IAAI,IAChDX,OAAO,CAAC,UAAU,IAAIC,IAAI;IAC/B,OAAO;QAAC;QAAc;KAAO,CAACM,QAAQ,CAACG,MAAMP,WAAW;AAC5D,CAAA,EAAGL,QAAQJ,GAAG;AAGd,0CAA0C;AAC1C,MAAMmB,SAAS;IACXC,IAAI,CAAC,gBAAgB,GAAGJ,OAAO,+BAA+B,GAAGK;QAC7D,IAAI,CAACL,OAAO;YACR,MAAM,IAAIM,MAAMD;QACpB;IACJ;AACJ;AAEAF,OAAOC,EAAE,CAAE,AAACrB,cAAc,QAAUA,cAAc,OAC9C,CAAC,wDAAwD,CAAC;AAE9DoB,OAAOC,EAAE,CAAE,AAACL,YAAY,QAAUA,YAAY,OAC1C,CAAC,2DAA2D,CAAC;AAEjEI,OAAOC,EAAE,CAAE,AAACF,aAAa,QAAUA,aAAa,OAC5C,CAAC,2DAA2D,CAAC;AAEjEC,OAAOC,EAAE,CAAC,AAACF,CAAAA,YAAYH,OAAM,MAAO,OAChC,CAAC,uDAAuD,CAAC,GACzD,CAAC,UAAU,CAAC;AAEhBI,OAAOC,EAAE,CAAC,AAACF,CAAAA,YAAYnB,SAAQ,MAAO,OAClC,CAAC,wDAAwD,CAAC,GAC1D,CAAC,mBAAmB,CAAC;AAGzBwB,OAAOC,OAAO,GAAG;IACbzB;IACAgB;IACAG;AACJ"}