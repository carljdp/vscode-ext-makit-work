{"version":3,"sources":["../../../src/dev/EnvConf.d.ts"],"sourceRoot":"./","sourcesContent":["// file: dev/EnvConf.d.cts\r\n\r\n/** \r\n * @fileoverview Type definitions for EnvConf.js \r\n */\r\n\r\n/** \r\n * @brief Predicate indicating whether the environment is development\r\n * @remark Value is determined from `process.env.NODE_ENV`:\r\n * - `true` when [ `development` | `develop` | `dev` ]\r\n * - `false` otherwise.\r\n * - Is complimentary value of `_isProd_`\r\n */\r\ndeclare const _isDev_: boolean;\r\n\r\n/** \r\n * @brief Predicate indicating whether the environment is production\r\n * @remark Value is determined from `process.env.NODE_ENV`:\r\n * - `true` when [ `production` | `prod` ]\r\n * - `false` otherwise.\r\n * - Is complimentary value of `_isDev_`\r\n */\r\ndeclare const _isProd_: boolean;\r\n\r\n/** \r\n * @brief Predicate indicating whether the environment is debug\r\n * @remark Value is determined from `process.env.DEBUG`:\r\n * - `true` when [ `true` | `1` | `y` | `yes` | `on` | `enable` | `enabled` ]\r\n * - `false` when [ `false` | `0` | `n` | `no` | `off` | `disable` | `disabled` ]\r\n */\r\ndeclare const _isDebug_: boolean;\r\n\r\ninterface IEnvConf extends Record<string, boolean> {\r\n    _isDev_: typeof _isDev_;\r\n    _isProd_: typeof _isProd_;\r\n    _isDebug_: typeof _isDebug_;\r\n}\r\n\r\n/** \r\n * Environment Configuration object.\r\n */\r\ndeclare const EnvConf: IEnvConf;\r\nexport default EnvConf;\r\n\r\n\r\nexport {\r\n    IEnvConf,\r\n    EnvConf,\r\n    _isDev_,\r\n    _isProd_,\r\n    _isDebug_,\r\n};\r\n"],"names":["EnvConf","_isDebug_","_isDev_","_isProd_"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,0BAA0B;AAE1B;;CAEC,GAED;;;;;;CAMC;;;;;;;;;;;IAmCGA,OAAO;eAAPA;;IAGAC,SAAS;eAATA;;IAFAC,OAAO;eAAPA;;IACAC,QAAQ;eAARA;;IAPJ,OAAuB;eAAvB;;;MAAA,WAAeH"}