{"version":3,"sources":["../../../src/utils/Log.ts"],"sourceRoot":"./","sourcesContent":["// file: /src/utils/Log.ts\r\n\r\nimport { ClampedInt } from './Strict';\r\n\r\n\r\nexport namespace StrictLoggerNS {\r\n\r\nexport class StrictLogEntry {\r\n\t\r\n    severity: StrictLogger.Severity = StrictLogger.Severity.Error;\r\n    text: string = \"\";\r\n    args: any[] = [];\r\n\r\n    constructor(severity: StrictLogger.Severity, message: string, ...args: any[]) {\r\n        this.severity = severity;\r\n        this.text = message;\r\n        this.args = args;\r\n    }\r\n}\r\n\r\nexport namespace StrictLogger {\r\n\r\n    export enum Severity {\r\n        Info = \"info\",\r\n        Warn = \"warning\",\r\n        Error = \"error\",\r\n\r\n        // TODO: insert exception\r\n\r\n        // TODO: make panic\r\n        Fatal = \"fatal\",\r\n    }\r\n\r\n    // \r\n    export enum Eagerness {\r\n        Immediate = \"immediate\",\r\n        Deferred = \"deferred\",\r\n    }\r\n    \r\n    export enum Policy {\r\n        Strict = \"strict\",\r\n        Relaxed = \"relaxed\",\r\n    }\r\n    \r\n    export enum Strategy {\r\n        Log = \"log\",\r\n        Throw = \"throw\",\r\n        Abort = \"abort\",\r\n    }\r\n    \r\n    export enum Tolerance {\r\n        Zero = \"zero\",\r\n        One = \"one\",\r\n        Many = \"many\",\r\n    }\r\n}\r\n\r\n\r\n\r\nnamespace Notify {\r\n\r\n    export enum Strategy {\r\n        log_continue,\r\n        log_throw,\r\n        log_abort,\r\n    }\r\n\r\n    export enum Eagerness {\r\n        Immediate = \"immediate\",\r\n        Deferred = \"deferred\",\r\n    }\r\n}\r\n\r\n} // namespace StrictLogger\r\n\r\nexport enum LogSeverity {\r\n\tTrace = -2,\r\n\tDebug = -1,\r\n\tLog = 0,\r\n\tInfo = 1,\r\n\tWarn = 2,\r\n\tError = 3,\r\n\tFatal = 4,\r\n}\r\nexport namespace LogSeverity {\r\n\r\n\texport function toString(level: LogSeverity): string {\r\n\t\tswitch (level) {\r\n\t\t\tcase LogSeverity.Trace: return \"TRACE\";\r\n\t\t\tcase LogSeverity.Debug: return \"DEBUG\";\r\n\t\t\tcase LogSeverity.Log: return \"LOG\";\r\n\t\t\tcase LogSeverity.Info: return \"INFO\";\r\n\t\t\tcase LogSeverity.Warn: return \"WARN\";\r\n\t\t\tcase LogSeverity.Error: return \"ERROR\";\r\n\t\t\tcase LogSeverity.Fatal: return \"FATAL\";\r\n\t\t}\r\n\t\treturn \"UNKNOWN\";\r\n\t}\r\n\r\n}\r\n\r\nexport interface ILoggerOptions {\r\n\tscopeLabel: string;\r\n\tinitialRelativeIndent: ClampedInt;\r\n\tinitialRelativeSeverity: LogSeverity;\r\n\tindentString: string;\r\n}\r\nconst defaultLoggerOptions: Required<ILoggerOptions> = {\r\n\tscopeLabel: \"unknown\",\r\n\tinitialRelativeIndent: new ClampedInt(0, 0, 8),\r\n\tinitialRelativeSeverity: LogSeverity.Log,\r\n\tindentString: \"  \",\r\n};\r\n\r\nexport class Logger {\r\n\r\n\tpublic static joinNonEmpty(joiner: string, ...args: string[]): string {\r\n\t\treturn args.filter((arg) => arg.length > 0).join(joiner);\r\n\t}\r\n\r\n\t// instance variables\r\n\t_initial: Required<ILoggerOptions>;\r\n\tstate: Required<ILoggerOptions>;\r\n\r\n\t// constructor\r\n\tconstructor(options: Partial<ILoggerOptions>) {\r\n\t\tthis._initial = Object.freeze(Object.assign({}, defaultLoggerOptions, options));\r\n\t\tthis.state = Object.assign({}, defaultLoggerOptions, this._initial);\r\n\t}\r\n\r\n\t// instance functions\r\n\ttrace = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Trace, msg, ...args);\r\n\t};\r\n\r\n\tdebug = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Debug, msg, ...args);\r\n\t};\r\n\r\n\tlog = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Log, msg, ...args);\r\n\t};\r\n\r\n\tinfo = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Info, msg, ...args);\r\n\t};\r\n\r\n\twarn = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Warn, msg, ...args);\r\n\t};\r\n\r\n\terror = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Error, msg, ...args);\r\n\t};\r\n\r\n\tfatal = (msg: string, ...args: any[]): void => {\r\n\t\tthis._log(LogSeverity.Fatal, msg, ...args);\r\n\t};\r\n\r\n\tindent(amount: number = 1): void {\r\n\t\tthis.state.initialRelativeIndent.value += amount;\r\n\t};\r\n\r\n\tunindent(amount: number = 1): void {\r\n\t\tthis.state.initialRelativeIndent.value -= amount;\r\n\t};\r\n\r\n\tsubScope = (options: Partial<ILoggerOptions>): Logger => {\r\n\r\n\t\tif (options.scopeLabel !== undefined && options.scopeLabel.length > 0) {\r\n\t\t\toptions.scopeLabel = Logger.joinNonEmpty(\":\",\r\n\t\t\t\tthis.state.scopeLabel, \r\n\t\t\t\toptions.scopeLabel\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\toptions.scopeLabel = Logger.joinNonEmpty(\":\", this.state.scopeLabel, \"subScope\");\r\n\t\t}\r\n\r\n\t\tconst mergedOptions = Object.assign({}, this.state, options);\r\n\t\treturn new Logger(mergedOptions);\r\n\t};\r\n\r\n\r\n\r\n\tprivate _log(level: LogSeverity, msg: string, ...args: any[]): void {\r\n\t\t// short-circuit if the level is below the threshhold\r\n\t\tif (level < this.state.initialRelativeSeverity) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// get the current label\r\n\t\tconst label = this.state.scopeLabel || this._initial.scopeLabel || defaultLoggerOptions.scopeLabel;\r\n\t\tconst indent = this.state.initialRelativeIndent || this._initial.initialRelativeIndent || defaultLoggerOptions.initialRelativeIndent;\r\n\t\tconst indentStr = this.state.indentString || this._initial.indentString || defaultLoggerOptions.indentString;\r\n\r\n\t\tconst consoleMessage = Logger.joinNonEmpty(\":\",\r\n\t\t\tLogSeverity.toString(level), \r\n\t\t\tlabel, \r\n\t\t\tindentStr.repeat(indent.value), \r\n\t\t\tmsg\r\n\t\t);\r\n\r\n\t\tswitch (level) {\r\n\t\t\tcase LogSeverity.Trace:\r\n\t\t\t\tconsole.trace(consoleMessage, ...args);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LogSeverity.Debug:\r\n\t\t\t\tconsole.debug(consoleMessage, ...args);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LogSeverity.Log:\r\n\t\t\t\tconsole.log(consoleMessage, ...args);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LogSeverity.Info:\r\n\t\t\t\tconsole.info(consoleMessage, ...args);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LogSeverity.Warn:\r\n\t\t\t\tconsole.warn(consoleMessage, ...args);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LogSeverity.Error:\r\n\t\t\t\tconsole.error(consoleMessage, ...args);\r\n\t\t\t\t// Strict error handling\r\n\t\t\t\tthrow new Error(consoleMessage);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LogSeverity.Fatal:\r\n\t\t\t\tconsole.error(consoleMessage, ...args);\r\n\t\t\t\t// Strict error handling\r\n\t\t\t\tprocess.exit(1);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`[PANIC] Log level: ${level} not implemented`);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["Logger","StrictLoggerNS","StrictLogEntry","severity","StrictLogger","Severity","Error","text","args","constructor","message","Eagerness","Policy","Strategy","Tolerance","Notify","LogSeverity","toString","level","defaultLoggerOptions","scopeLabel","initialRelativeIndent","ClampedInt","initialRelativeSeverity","indentString","joinNonEmpty","joiner","filter","arg","length","join","_initial","state","options","Object","freeze","assign","trace","msg","_log","debug","log","info","warn","error","fatal","indent","amount","value","unindent","subScope","undefined","mergedOptions","label","indentStr","consoleMessage","repeat","console","process","exit"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}