{"version":3,"sources":["../../../src/common/Singleton.ts"],"sourceRoot":"./","sourcesContent":["// file src/common/Singleton.ts\r\n\r\n\r\nimport { IOrigin, Origin } from './Origin';\r\n\r\n\r\ninterface ISingleton extends IOrigin {\r\n\r\n    // instance members common to all singletons\r\n\r\n    /** Symbol key for the singleton instance */\r\n    instanceKey: Required<Readonly<Symbol>>;\r\n\r\n}\r\n\r\nabstract class Singleton extends Origin implements ISingleton {\r\n\r\n    // implementation common to all singletons\r\n\r\n    public instanceKey;\r\n\r\n    // the 'necessary evil' static unsafe property :(\r\n    protected static instance: Singleton | undefined = undefined;\r\n\r\n    public constructor(key?: string) {\r\n        super();\r\n        this.instanceKey = Symbol.for(key || 'Singleton');\r\n    }\r\n\r\n    public static getInstance(): Singleton | undefined {\r\n        return Singleton.instance;\r\n    }\r\n\r\n};\r\n\r\nexport { ISingleton, Singleton };\r\n"],"names":["Singleton","Origin","instanceKey","instance","undefined","key","Symbol","for","getInstance"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,+BAA+B;;;;;+BAmCVA;;;eAAAA;;;wBAhCW;AAYhC,MAAeA,kBAAkBC,cAAM;IAEnC,0CAA0C;IAEnCC,YAAY;IAEnB,iDAAiD;IACjD,OAAiBC,WAAkCC,UAAU;IAE7D,YAAmBC,GAAY,CAAE;QAC7B,KAAK;QACL,IAAI,CAACH,WAAW,GAAGI,OAAOC,GAAG,CAACF,OAAO;IACzC;IAEA,OAAcG,cAAqC;QAC/C,OAAOR,UAAUG,QAAQ;IAC7B;AAEJ"}