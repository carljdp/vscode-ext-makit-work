{"version":3,"sources":["../../../src/common/Mixins.ts"],"sourceRoot":"./","sourcesContent":["// file: src/common/Mixins.ts\r\n\r\nimport { intersection, difference, union, each } from 'lodash';\r\n\r\n\r\ninterface IConstructable<T> {\r\n    new(...args: any[]): T;\r\n}\r\n\r\nimport { _isProd_, _isDev_, _isDebug_ } from '../dev/EnvConf.js';\r\n\r\n\r\n\r\nfunction getStaticMembers<T>(class_: T): string[] {\r\n    return Object.getOwnPropertyNames(class_);\r\n}\r\n\r\nfunction getStaticProperties<T>(class_: T): string[] {\r\n    return getStaticMembers(class_).filter((name) => typeof (class_ as any)[name] !== 'function');\r\n}\r\n\r\nfunction getInstanceMembers<T>(class_: T): string[] {\r\n    if (typeof class_ !== 'function') {\r\n        return [];\r\n    }\r\n    return Object.getOwnPropertyNames(class_.prototype);\r\n}\r\n\r\nfunction getInstanceProperties<T>(class_: T): string[] {\r\n    if (typeof class_ !== 'function') {\r\n        return [];\r\n    }\r\n    return getInstanceMembers(class_).filter((name) => typeof (class_.prototype as any)[name] !== 'function');\r\n}\r\n\r\n\r\nfunction isClassConstructor(value: any): value is { new(...args: any[]): any } {\r\n    return (typeof value === 'function' && /^class\\s/.test(value.toString()));\r\n}\r\nfunction isFunctionConstructor(value: any): value is { new(...args: any[]): any } {\r\n    return (typeof value === 'function' && /^function\\s/.test(value.toString()));\r\n}\r\n\r\nfunction canBeConstructed(value: any): boolean {\r\n    return isClassConstructor(value) || isFunctionConstructor(value);\r\n}\r\n\r\nfunction canBeInstanciatedWithNew(value: any): boolean {\r\n    return canBeConstructed(value); // Simpler and more accurate based on the naming\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n// MOSTLY CORRECT - I THINK\r\n\r\n\r\n/**\r\n * Get all properties of an object, including from its prototype.\r\n * @param obj The object to get the properties of.\r\n * @returns An array of all property names of the object.\r\n */\r\nfunction getEnumerableProperties(obj: any): string[] {\r\n    let props: string[] = [];\r\n    if (typeof obj !== 'object') {\r\n        return props;\r\n    }\r\n    for (let prop in obj) {\r\n        props.push(prop);\r\n    }\r\n    return props;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport namespace SafeStrictMode {\r\n\r\n    /** Global symbol for a value that is ommitted in strict mode. */\r\n    export const Ommitted: Readonly<symbol> = Symbol('ommitted');\r\n\r\n    /** Global symbol for a property that is ommitted in strict mode. */\r\n    export const Caller: Readonly<symbol> = Symbol('caller');\r\n    /** Global symbol for a property that is ommitted in strict mode. */\r\n    export const Callee: Readonly<symbol> = Symbol('callee');\r\n    /** Global symbol for a property that is ommitted in strict mode. */\r\n    export const Arguments: Readonly<symbol> = Symbol('arguments');\r\n\r\n    /** Key-value replacements for restricted members in strict mode. */\r\n    const RestrictedMembers: Record<string, Record<string, symbol>> = Object.assign(\r\n        Object.create(null), {\r\n        caller: { key: Caller, value: Ommitted },\r\n        callee: { key: Callee, value: Ommitted },\r\n        arguments: { key: Arguments, value: Ommitted },\r\n    });\r\n\r\n    /**\r\n     * Predicate to determine if the value reported for a property must be the same\r\n     * as the value of the corresponding target object property (according to the\r\n     * Proxy invariant spec).\r\n     * @param targetObjectPropertyDescriptor The property descriptor of the target\r\n     * @returns `true` if the value reported for a property must be the same as the\r\n     * value of the corresponding target object property, `false` otherwise.\r\n     * @spec \r\n     * The value reported for a property must be the same as the value of the\r\n     * corresponding target object property if the target object property is a\r\n     * non-writable, non-configurable own data property.\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get#invariants\r\n     */\r\n    function intercepetedValueMustMatchTarget<T>(targetObjectPropertyDescriptor?: TypedPropertyDescriptor<T>): boolean {\r\n        if (targetObjectPropertyDescriptor === undefined) {\r\n            return false;\r\n        }\r\n        return (\r\n            targetObjectPropertyDescriptor.writable === false && // non-writable\r\n            targetObjectPropertyDescriptor.configurable === false && // non-configurable\r\n            targetObjectPropertyDescriptor.enumerable === true // is own property\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * Predicate to determine if the value reported for a property must be \r\n     * undefined (according to the Proxy invariant spec).\r\n     * @param targetObjectPropertyDescriptor The property descriptor of the target\r\n     * @returns `true` if the value reported for a property must be undefined,\r\n     * `false` otherwise.\r\n     * @spec\r\n     * The value reported for a property must be undefined if the corresponding\r\n     * target object property is a non-configurable own accessor property that\r\n     * has undefined as its [[Get]] attribute.\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get#invariants\r\n     */\r\n    function intercepetedValueMustBeUndefined<T>(targetObjectPropertyDescriptor?: TypedPropertyDescriptor<T>): boolean {\r\n        if (targetObjectPropertyDescriptor === undefined) {\r\n            return false;\r\n        }\r\n        return (\r\n            targetObjectPropertyDescriptor.configurable === false && // non-configurable\r\n            targetObjectPropertyDescriptor.enumerable === true && // is own property\r\n            targetObjectPropertyDescriptor.get === undefined // has undefined as its [[Get]] attribute\r\n        );\r\n    }\r\n\r\n    function looksLikeStrictModeFunction(value: any): boolean {\r\n        return (\r\n            typeof value === 'function' && // is a function\r\n            'caller' in value && // has a caller\r\n            'arguments' in value // has arguments\r\n        );\r\n    }\r\n\r\n    function looksLikeStrictModeFunctionArguments(value: any): boolean {\r\n        return (\r\n            typeof value === 'object' && // is an object\r\n            'callee' in value && // is being called\r\n            'length' in value // has a length\r\n        );\r\n    }\r\n\r\n    function shouldIntercept(value: any): boolean {\r\n        return looksLikeStrictModeFunction(value) ||\r\n            looksLikeStrictModeFunctionArguments(value);\r\n    }\r\n\r\n\r\n    export function proxyIfNeeded<T extends Object>(thing: T): T {\r\n\r\n        if (thing === null || thing === undefined) {\r\n            return thing;\r\n        }\r\n        if (!shouldIntercept(thing)) {\r\n            // console.log(`[Proxy] Ignoring '${String(thing)}'`);\r\n            return thing;\r\n        }\r\n        // console.log(`[Proxy] Intercepting '${String(thing)}'`);\r\n\r\n        return new Proxy<T>(thing, {\r\n            get(target, key, receiver) {\r\n\r\n                if (key in RestrictedMembers) {\r\n\r\n                    // console.log(`[Proxy] Access to member '${String(key)}' is restricted in strict mode.`);\r\n                    // console.log(`[Proxy]   this requires special handling...`);\r\n\r\n                    const propDesc = Reflect.getOwnPropertyDescriptor(target, key);\r\n                    let specFailCount: number = 0;\r\n                    let replacementValue: symbol | any = Reflect.get(RestrictedMembers, key).value;\r\n\r\n                    if (intercepetedValueMustMatchTarget(propDesc)) {\r\n                        // console.log(`[Proxy]   Spec violation: The value reported for a property must be the same as the value of the corresponding target object property.`);\r\n                        // console.log(`[Proxy]     Reverting replacement value '${String(replacementValue)}' to target object value.`);\r\n                        replacementValue = Reflect.get(target, key, receiver);\r\n                        specFailCount += 1;\r\n                    }\r\n\r\n                    if (intercepetedValueMustBeUndefined(propDesc)) {\r\n                        // console.log(`[Proxy]   Spec violation: The value reported for a property must be undefined.`);\r\n                        // console.log(`[Proxy]     Reverting replacement value '${String(replacementValue)}' to 'undefined'.`);\r\n                        replacementValue = undefined;\r\n                        specFailCount += 1;\r\n                    }\r\n\r\n                    if (specFailCount === 0) {\r\n                        // console.log(`[Proxy]   Spec compliance: The value may be replaced..`);\r\n                        // console.log(`[Proxy]     Successfuly intercepted 'get' for '${String(key)}',`);\r\n                    }\r\n                    else {\r\n                        // console.log(`[Proxy]   Failed to intercept 'get' for '${String(key)}' (Spec takes precedence)`);\r\n                    }\r\n                    // console.log(`[Proxy]     Returned value:`, replacementValue);\r\n                    return replacementValue;\r\n                }\r\n                else {\r\n                    return Reflect.get(target, key, receiver);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function strictModeGetOwnMembers(obj: any): { key: string | symbol, value: any }[] {\r\n        const members: { key: string | symbol, value: any }[] = [];\r\n\r\n\r\n        [...Object.getOwnPropertyNames(obj), ...Object.getOwnPropertySymbols(obj)]\r\n            .forEach(prop => {\r\n                if (prop in RestrictedMembers) {\r\n                    members.push({ key: RestrictedMembers.prop.key, value: RestrictedMembers.prop.value });\r\n                }\r\n                else {\r\n                    members.push({ key: prop, value: obj.prop });\r\n                }\r\n            });\r\n\r\n\r\n\r\n        return members;\r\n    };\r\n\r\n} // namespace SafeStrictMode\r\n\r\n\r\nfunction getAllMemberKeysAsSet<T extends Object | Function>(thing: T, startLevel: number = 0, maxLevel?: number): Set<string | symbol> {\r\n    let props: Set<string | symbol> = new Set<string | symbol>();\r\n    if (thing === null || thing === undefined) {\r\n        return props;\r\n    }\r\n\r\n    // clamp levels to prevent infinite recursion\r\n    const traversalLimit = 255;\r\n    startLevel = Math.min(0, Math.max(startLevel || 0), traversalLimit);\r\n    maxLevel = Math.max(0, Math.min(maxLevel || traversalLimit), traversalLimit);\r\n\r\n    let currentLevel = 0;\r\n    let currentObj = thing;\r\n\r\n    while (currentLevel <= maxLevel && currentObj !== undefined) {\r\n\r\n        let _currentObj: T | ObjectConstructor = (currentObj === null)\r\n            ? Object\r\n            : currentObj;\r\n\r\n        // skip while not yet at the start level\r\n        if (currentLevel >= startLevel) {\r\n            Reflect.ownKeys(_currentObj).forEach(p => props.add(p));\r\n        }\r\n\r\n        // if we reach the global object, break\r\n        if (_currentObj === Object) {\r\n            break;\r\n        }\r\n        else {\r\n            currentObj = Object.getPrototypeOf(currentObj);\r\n            currentLevel += 1;\r\n        }\r\n\r\n        if (currentLevel >= traversalLimit) {\r\n            console.warn(`[getAllMemberKeys] Traversal limit reached at level ${currentLevel}. Breaking as-precaution.`);\r\n            break;\r\n        }\r\n    }\r\n    return props;\r\n}\r\n\r\nnamespace Members {\r\n\r\n    type TypeofResult = 'undefined' | 'boolean' | 'number' | 'string' | 'symbol' | 'bigint' | 'function' | 'object';\r\n\r\n    type KeyType = ReturnType<typeof Reflect.ownKeys>[number];\r\n    type ValueType = ReturnType<typeof Reflect.get>;\r\n\r\n    type DataProperty = { kind: \"data\", name: string, isStatic: boolean };\r\n    type AccessorProperty = { kind: \"accessor\", name: string, isStatic: boolean };\r\n    type Method = { kind: \"method\", name: string, isStatic: boolean };\r\n    type PrivateField = { kind: \"privateField\", name: string, isStatic: boolean };\r\n    type PublicField = { kind: \"publicField\", name: string, isStatic: boolean };\r\n\r\n    type StringPropperty = DataProperty | AccessorProperty | Method | PrivateField | PublicField;\r\n    type SymbolProperty = { kind: \"symbol\", symbol: Symbol, isStatic: boolean };\r\n\r\n    type ExtendedMember = StringPropperty | SymbolProperty;\r\n\r\n    type ObjectWithMethods = {\r\n        staticMethods: Method[];\r\n        instanceMethods: Method[];\r\n    };\r\n\r\n    type ComplexObject = {\r\n        members: ExtendedMember[];\r\n    };\r\n\r\n    namespace Traversal {\r\n\r\n        type Cursor = {\r\n            key: KeyType\r\n            value: ValueType\r\n            level: number;\r\n        };\r\n\r\n        type Filter = (cursor: Cursor) => boolean;\r\n        type Options = {\r\n            preFilter?: Filter;\r\n            postFilter?: Filter;\r\n        };\r\n    } // namespace Traversal\r\n} // namespace GetMembers\r\n\r\nfunction getProtoypeChain<T extends any>(thing?: T, target?: T, levelLimit?: number): string {\r\n    levelLimit = Math.max(0, levelLimit || 32);\r\n\r\n    let chain: string[] = [];\r\n    let currentObj: T | null = thing || null;\r\n\r\n    while (currentObj !== undefined && currentObj !== null && currentObj !== target && chain.length < levelLimit) {\r\n        currentObj = Object.getPrototypeOf(currentObj);\r\n        chain.push((currentObj === null) ? '{null}' : (currentObj === undefined) ? 'undefined' : String((typeof currentObj === 'function') ? currentObj.name || 'anon' : currentObj.constructor.name));\r\n    }\r\n    return chain.reverse().join('->');\r\n}\r\n\r\n\r\nenum ToStringFirstWord {\r\n    Class = 'class',\r\n    Function = 'function'\r\n}\r\n\r\n/**\r\n * Tries to determine the constructor of a given object or function.\r\n * @param thing The object or function to determine the constructor of.\r\n * @returns string representation of the constructor like 'Function <name>' or 'Class <name>'\r\n */\r\nfunction inspect<T extends any>(thing?: T): string {\r\n\r\n    // SHOULD WE RECONSIDER THIS? now that we know:\r\n    //\r\n    // > Object.toString()\r\n    //     'function Object() ...'\r\n    // > (new Object).toString()\r\n    //     '[object Object]'\r\n    // > (() => {}).toString()\r\n    //     '( .. ) => { ... }'\r\n    // > (new Function()).toString()\r\n    //     'function anonymous(..) ...'\r\n    // > (globalThis).toString().substring(0,24)\r\n    //     '[object global]'\r\n\r\n\r\n    let result = '';\r\n    if (thing === undefined) {\r\n        result = 'Built-in Primitive: undefined (value)';\r\n    }\r\n    else if (thing === null) {\r\n        result = 'Built-in Primitive: null (value)';\r\n    }\r\n    else if (typeof thing === 'object' || typeof thing === 'function') {\r\n        const _type = typeof thing;\r\n        const _thing = (_type === 'function') ? thing : thing.constructor;\r\n        const _suffix = (_type === 'function') ? '(definition)' : '(instance)';\r\n        const _definition = _thing.toString();\r\n\r\n        const end = _definition[0] === 'c'\r\n            ? _definition.indexOf('{')\r\n            : _definition.indexOf('(');\r\n\r\n        const parts = _definition.substring(0, end).trim().split(' ', 2);\r\n        let part0;\r\n        let part1;\r\n\r\n        const stdBuiltIn = [\r\n            'AggregateError',\r\n            'Array',\r\n            'ArrayBuffer',\r\n            'AsyncFunction',\r\n            'AsyncGenerator',\r\n            'AsyncGeneratorFunction',\r\n            'AsyncIterator',\r\n            'Atomics',\r\n            'BigInt',\r\n            'BigInt64Array',\r\n            'BigUint64Array',\r\n            'Boolean',\r\n            'DataView',\r\n            'Date',\r\n            'Error',\r\n            'EvalError',\r\n            'FinalizationRegistry',\r\n            'Float32Array',\r\n            'Float64Array',\r\n            'Function',\r\n            'Generator',\r\n            'GeneratorFunction',\r\n            'globalThis',\r\n            'Infinity',\r\n            'Int16Array',\r\n            'Int32Array',\r\n            'Int8Array',\r\n            'InternalError Non - standard',\r\n            'Intl',\r\n            'Iterator',\r\n            'JSON',\r\n            'Map',\r\n            'Math',\r\n            'NaN',\r\n            'Number',\r\n            'Object',\r\n            'Promise',\r\n            'Proxy',\r\n            'RangeError',\r\n            'ReferenceError',\r\n            'Reflect',\r\n            'RegExp',\r\n            'Set',\r\n            'SharedArrayBuffer',\r\n            'String',\r\n            'Symbol',\r\n            'SyntaxError',\r\n            'TypedArray',\r\n            'TypeError',\r\n            'Uint16Array',\r\n            'Uint32Array',\r\n            'Uint8Array',\r\n            'Uint8ClampedArray',\r\n            'URIError',\r\n            'WeakMap',\r\n            'WeakRef',\r\n            'WeakSet',\r\n        ];\r\n        let prefix = stdBuiltIn.includes(parts[1] || '') ? 'Built-in' : 'Custom';\r\n\r\n        if (prefix === 'Custom' && parts[0] === 'function' && parts[1] === 'anonymous') {\r\n            part0 = 'AnonFn';\r\n            part1 = 'new-Function';\r\n        }\r\n        else if (prefix === 'Built-in' && parts[0] === 'function') {\r\n            part0 = 'Class';\r\n            part1 = parts[1];\r\n        }\r\n\r\n        result = `${prefix} ${part0 || 'ArrowFn'}: ${part1 || 'anonymous'} ${_suffix}`;\r\n    }\r\n    else {\r\n        result = `Built-in Primitive: ${typeof thing} (value)`;\r\n    }\r\n    return result;\r\n}\r\n\r\ntype Fn<T extends any> = (...args: any[]) => T;\r\n\r\nfunction _testRun_<T extends Fn<any>>(fn: T, ...args: Parameters<T>): ReturnType<T> {\r\n    return fn(...args);\r\n}\r\nfunction _testOut_<T extends Fn<any>>(fn: T, ...args: Parameters<T>): string {\r\n    return String(_testRun_(fn, ...args));\r\n}\r\nfunction _testLog_<T extends Fn<any>>(fn: T, ...args: Parameters<T>): void {\r\n    return console.log(_testOut_(fn, ...args));\r\n}\r\n\r\nlet testResult: any[] = [];\r\n\r\nfunction NamedFn() { };\r\ntestResult.push(_testOut_(inspect, NamedFn));\r\ntestResult.push(_testOut_(inspect, new (NamedFn as any)()));\r\n\r\ntestResult.push(_testOut_(inspect, (() => { return {}; })));\r\ntestResult.push(_testOut_(inspect, (() => { return () => { }; })()));\r\ntestResult.push(_testOut_(inspect, new Function()));\r\n\r\nconst AnonFn = new Function();\r\ntestResult.push(_testOut_(inspect, AnonFn));\r\ntestResult.push(_testOut_(inspect, new (AnonFn as any)()));\r\n\r\nclass FromCl { }\r\ntestResult.push(_testOut_(inspect, FromCl));\r\ntestResult.push(_testOut_(inspect, new FromCl()));\r\n\r\nabstract class AbsCl { }\r\ntestResult.push(_testOut_(inspect, AbsCl));\r\n\r\nclass FromAbsCl extends AbsCl { }\r\ntestResult.push(_testOut_(inspect, FromAbsCl));\r\ntestResult.push(_testOut_(inspect, new FromAbsCl()));\r\n\r\ntestResult.push(_testOut_(inspect, Object));\r\n\r\ntestResult.push(_testOut_(inspect, new Object()));\r\ntestResult.push(_testOut_(inspect, (() => { return {}; })()));\r\ntestResult.push(_testOut_(inspect, {}));\r\n\r\ntestResult.push(_testOut_(inspect, 'abc'));\r\ntestResult.push(_testOut_(inspect, String()));\r\ntestResult.push(_testOut_(inspect, NaN));\r\ntestResult.push(_testOut_(inspect, 123));\r\ntestResult.push(_testOut_(inspect, Number(123)));\r\ntestResult.push(_testOut_(inspect, BigInt(0)));\r\ntestResult.push(_testOut_(inspect, true));\r\ntestResult.push(_testOut_(inspect,));\r\ntestResult.push(_testOut_(inspect, Symbol('abc')));\r\ntestResult.push(_testOut_(inspect, null));\r\n\r\ntestResult.push(_testOut_(inspect, this));\r\ntestResult.push(_testOut_(inspect, globalThis));\r\n\r\ntestResult.forEach((item, index) => {\r\n    testResult[index] = item.replace(/[\\(\\):]/g, '').split(' ');\r\n    testResult[index] = { type: testResult[index][0], family: testResult[index][1], name: testResult[index][2], suffix: testResult[index][3] };\r\n});\r\n\r\nconsole.table(testResult);\r\n\r\n\r\nfunction getAllMembersAsKvRecord<T extends (Object | Function)>(thing: T): Record<(string | symbol), any> {\r\n    const members: Record<string | symbol, any> = Object.create(null);\r\n\r\n    let level = 0;\r\n    let membersCount = 0;\r\n    let membersAddedThisLevel = 0;\r\n    let currentLevelName = '';\r\n\r\n    let currentObj = SafeStrictMode.proxyIfNeeded(thing);\r\n\r\n    while (currentObj !== undefined) {\r\n\r\n        let _currentObj: T | ObjectConstructor = (currentObj === null)\r\n            ? Object\r\n            : currentObj;\r\n\r\n\r\n        if (level === 0) {\r\n            switch (typeof _currentObj) {\r\n                case 'function':\r\n                    currentLevelName = `${String(_currentObj.name) || 'anonymous'}()` + currentLevelName;\r\n                    break;\r\n                case 'object':\r\n                    currentLevelName = `${String(_currentObj.constructor.name)}{}` + currentLevelName;\r\n                    break;\r\n                default:\r\n                    currentLevelName = `<unknown>` + currentLevelName;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            currentLevelName = `^${currentLevelName}->`;\r\n            switch (typeof _currentObj) {\r\n                case 'function':\r\n                    currentLevelName += `${String(_currentObj.name) || 'anonymous'}()`;\r\n                    break;\r\n                case 'object':\r\n                    currentLevelName += `${String(_currentObj.constructor.name)}{}`;\r\n                    break;\r\n                default:\r\n                    currentLevelName += `<unknown>`;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        Reflect.ownKeys(_currentObj).forEach(p => {\r\n\r\n            const propValue = Reflect.get(_currentObj, p);\r\n            const propValueType = typeof propValue;\r\n\r\n            if (Reflect.ownKeys(members).includes(p)) {\r\n                // dont overwrite existing members\r\n                // console.log(`level ${level}: ! ${currentLevelName}.${String(p)}: ${propValueType}(${String(propValue)})`);\r\n                console.log(`level ${level}: ! ${currentLevelName}.${String(p)}: ${propValueType}`);\r\n            }\r\n            else {\r\n                Reflect.set(members, p, propValue);\r\n                membersAddedThisLevel += 1;\r\n                // console.log(`level ${level}: + ${currentLevelName}.${String(p)}: ${propValueType}(${String(propValue)})`);\r\n                console.log(`level ${level}: + ${currentLevelName}.${String(p)}: ${propValueType}`);\r\n            }\r\n        });\r\n\r\n        // console.log(`level ${level}:   ${currentLevelName} added ${membersAddedThisLevel} members`);\r\n\r\n\r\n        membersCount += membersAddedThisLevel;\r\n        membersAddedThisLevel = 0;\r\n        level += 1;\r\n        // break if we reach the global object\r\n        if (_currentObj === Object) {\r\n            break;\r\n        }\r\n        else {\r\n            currentObj = SafeStrictMode.proxyIfNeeded(Object.getPrototypeOf(currentObj));\r\n        }\r\n    }\r\n\r\n    return members;\r\n}\r\n\r\n\r\nfunction applyMixins(derivedCtor: any, baseCtors: any[], baseCtorArgs: any[][] = []) {\r\n    baseCtors.forEach((baseCtor, i) => {\r\n        // If arguments for the base constructor are provided, instantiate it\r\n        const instance = baseCtorArgs[i] ? new baseCtor(...baseCtorArgs[i]) : new baseCtor();\r\n\r\n        // Copy instance properties and methods\r\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\r\n            Object.defineProperty(derivedCtor.prototype, name, descriptor!);\r\n        });\r\n\r\n        // Copy static properties and methods\r\n        Object.getOwnPropertyNames(baseCtor).forEach((name) => {\r\n            if (name !== 'prototype') { // Avoid overwriting the prototype\r\n                const descriptor = Object.getOwnPropertyDescriptor(baseCtor, name);\r\n                Object.defineProperty(derivedCtor, name, descriptor!);\r\n            }\r\n        });\r\n\r\n        // Copy instance properties and methods from the instantiated mixin\r\n        Object.getOwnPropertyNames(instance).forEach((name) => {\r\n            const descriptor = Object.getOwnPropertyDescriptor(instance, name);\r\n            Object.defineProperty(derivedCtor.prototype, name, descriptor!);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Determines whether a function is likely intended to be used as a constructor.\r\n * @param candidate  The function to check.\r\n * @returns `true` if the function is likely intended to be used as a \r\n * constructor, `false` otherwise.\r\n * @note This function is not foolproof, but it is a good heuristic for\r\n * determining whether a function is intended to be used as a constructor.\r\n * It is based on the assumption that constructor functions typically have\r\n * methods or properties defined on their prototype.\r\n * @note **False Negatives:** Constructors that do not define additional \r\n * methods or properties on their prototype would be incorrectly identified \r\n * as not being constructors. This could happen in cases where a constructor \r\n * is used primarily for its side effects or setting instance properties, \r\n * without adding methods to the prototype.\r\n * @note **Edge Cases:** Some built-in constructors or objects from external \r\n * libraries might not follow the typical pattern of user-defined constructors,\r\n * potentially leading to incorrect determinations.\r\n * @note **False Positives:** It's harder to get false positives with this \r\n * approach, but it's not impossible, especially with complex objects that \r\n * mimic constructor behavior.\r\n */\r\nfunction isLikelyConstructor(candidate: any): boolean {\r\n\r\n    // first ensures that the candidate is of type function, which is a\r\n    // necessary condition for being a constructor.\r\n    if (typeof candidate !== 'function') {\r\n        return false;\r\n    }\r\n\r\n    // In JavaScript, constructor functions have a prototype property that is\r\n    // used as the prototype for all instances created with that constructor.\r\n    // This property is an object, which, by default, contains a constructor \r\n    // property pointing back to the function itself.\r\n    if (candidate.prototype === undefined || candidate.prototype === null) {\r\n        return false;\r\n    }\r\n\r\n    // This step attempts to distinguish between functions intended to be used\r\n    // as constructors(which typically have methods or properties defined on \r\n    // their prototype) and regular functions(which usually do not).\r\n    const prototypeKeys = Object.keys(candidate.prototype)\r\n        .filter((key) => key !== 'constructor');\r\n\r\n    return prototypeKeys.length > 0;\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\nfunction isInstance(value: any): boolean {\r\n    return typeof value === 'object';\r\n}\r\n\r\n\r\n// Basic member types\r\ntype DataProperty = { kind: \"data\", name: string, isStatic: boolean };\r\ntype AccessorProperty = { kind: \"accessor\", name: string, isStatic: boolean };\r\ntype Method = { kind: \"method\", name: string, isStatic: boolean };\r\ntype PrivateField = { kind: \"privateField\", name: string, isStatic: boolean };\r\ntype PublicField = { kind: \"publicField\", name: string, isStatic: boolean };\r\n\r\n// Union of all basic member types\r\ntype Member = DataProperty | AccessorProperty | Method | PrivateField | PublicField;\r\n\r\n// Example: Adding symbol properties as another type\r\ntype SymbolProperty = { kind: \"symbol\", symbol: Symbol, isStatic: boolean };\r\n\r\n// Updated union including SymbolProperty\r\ntype ExtendedMember = Member | SymbolProperty;\r\n\r\n\r\n// Specific combination: An object with both static and instance methods\r\ntype ObjectWithMethods = {\r\n    staticMethods: Method[];\r\n    instanceMethods: Method[];\r\n};\r\n\r\n// Utilizing the isStatic flag to differentiate\r\nfunction createObjectWithMethods(staticMethods: Method[], instanceMethods: Method[]): ObjectWithMethods {\r\n    return { staticMethods, instanceMethods };\r\n}\r\n\r\ntype ComplexObject = {\r\n    members: Member[];\r\n};\r\n\r\nfunction describeComplexObject(members: Member[]): ComplexObject {\r\n    return { members };\r\n}\r\n\r\n\r\n// - - - - - - - - - - - - - -\r\n\r\n// pretty print diff between arrays\r\n\r\nfunction anyToString(value: any): string {\r\n    if (value === undefined) {\r\n        return '<undefined>';\r\n    }\r\n    if (value === null) {\r\n        return '<null>';\r\n    }\r\n    if (typeof value === 'string' && value === '') {\r\n        return '<empty>';\r\n    }\r\n    if (typeof value === 'symbol') {\r\n        return value.toString();\r\n    }\r\n    if (typeof value === 'function') {\r\n        return value.name;\r\n    }\r\n    return String(value);\r\n}\r\n\r\nfunction prettyPrintDiff(listA: Array<string | symbol>, listB: Array<string | symbol>) {\r\n\r\n    const inAandB = intersection(listA, listB);\r\n\r\n    const onlyInA = difference(listA, listB);\r\n    const onlyInB = difference(listB, listA);\r\n\r\n    const combined = union(Array.from(listA), Array.from(listB));\r\n\r\n    const lineNrColWidth = 3;\r\n    const typeColWidth = 9;\r\n\r\n    // Find the longest string to pad the columns\r\n    let colWidth = 0;\r\n    [combined].forEach((arr) => {\r\n        arr.forEach((item) => {\r\n            const len = anyToString(item).length;\r\n            if (len > colWidth) {\r\n                colWidth = len;\r\n            }\r\n        });\r\n    });\r\n\r\n    const colSep = ' | ';\r\n\r\n    let output = '';\r\n\r\n    output += `${String('#').padEnd(lineNrColWidth, ' ')}`;\r\n    output += colSep;\r\n    output += `${String('Type').padEnd(typeColWidth, ' ')}`;\r\n    output += colSep;\r\n    output += `${String('In A').padEnd(colWidth, ' ')}`;\r\n    output += colSep;\r\n    output += `${String('In Both').padEnd(colWidth, ' ')}`;\r\n    output += colSep;\r\n    output += `${String('In B').padEnd(colWidth, ' ')}`;\r\n    output += colSep;\r\n    output += '\\n';\r\n\r\n    output += `${String('').padEnd(lineNrColWidth, '-')}`;\r\n    output += colSep;\r\n    output += `${String('').padEnd(typeColWidth, '-')}`;\r\n    output += colSep;\r\n    output += `${String('').padEnd(colWidth, '-')}`;\r\n    output += colSep;\r\n    output += `${String('').padEnd(colWidth, '-')}`;\r\n    output += colSep;\r\n    output += `${String('').padEnd(colWidth, '-')}`;\r\n    output += colSep;\r\n    output += '\\n';\r\n\r\n\r\n    // vs-code workaround for terminal buffer size: flush output\r\n    // remove last newline\r\n    console.log(output.slice(0, -1));\r\n    output = '';\r\n\r\n    let lineNr = 0;\r\n\r\n    // for each item in the union\r\n    each(combined, (item) => {\r\n\r\n        lineNr += 1;\r\n\r\n        const onlyA = (onlyInA.includes(item) ? anyToString(item) : '').padEnd(colWidth, ' ');\r\n        const both = (inAandB.includes(item) ? anyToString(item) : '').padEnd(colWidth, ' ');\r\n        const onlyB = (onlyInB.includes(item) ? anyToString(item) : '').padEnd(colWidth, ' ');\r\n\r\n\r\n\r\n        // CHEAT\r\n        const type = typeof Reflect.get(globalThis, item);\r\n\r\n\r\n        output += `${String(lineNr).padEnd(lineNrColWidth, ' ')}`;\r\n        output += colSep;\r\n        output += `${type.padEnd(typeColWidth, ' ')}`;\r\n        output += colSep;\r\n        output += `${onlyA}`;\r\n        output += colSep;\r\n        output += `${both}`;\r\n        output += colSep;\r\n        output += `${onlyB}`;\r\n        output += colSep;\r\n        output += '\\n';\r\n\r\n        // vs-code workaround for terminal buffer size: flush output\r\n        // remove last newline\r\n        console.log(output.slice(0, -1));\r\n        output = '';\r\n\r\n    });\r\n\r\n    return output;\r\n}\r\n\r\n\r\n// - - - - - - - - - - - - - -\r\n\r\n\r\n\r\n\r\n// example / test\r\n\r\nclass SomeClass {\r\n    static staticMethod() { }\r\n    instanceMethod() { }\r\n    static staticData = 1;\r\n    instanceData = 2;\r\n}\r\n\r\n// console.log('count of members in globalThis:', getAllMemberKeys(getAllMembersKV(SomeClass)).size);\r\n\r\n// log members one by one with line numbers\r\n\r\n// const object = getAllMembersKV(globalThis);\r\n// let lineNr = 0;\r\n// [...Object.getOwnPropertyNames(globalThis), ...Object.getOwnPropertySymbols(globalThis)].forEach((key) => {\r\n//     lineNr += 1;\r\n//     console.log(`${lineNr}. ${String(key)} (${typeof object[key]})`);\r\n// });\r\n\r\nconsole.table([\r\n    getAllMemberKeysAsSet(SomeClass, 0, 0),\r\n    getAllMemberKeysAsSet(new SomeClass(), 0, 0)]\r\n);\r\n\r\n\r\n// console.log(`Is 'SomeClass' a class constructor? ${isClassConstructor(SomeClass)} `);\r\n// console.log(`Is 'SomeClass' a function constructor? ${isFunctionConstructor(SomeClass)} `);\r\n// console.log(`Can 'SomeClass' be constructed ? ${canBeConstructed(SomeClass)} `);\r\n// console.log(`Can 'SomeClass' be instanciated with new? ${canBeInstanciatedWithNew(SomeClass)} `);\r\n// console.log(`Is 'SomeClass' a likely constructor ? ${isLikelyConstructor(SomeClass)} `);\r\n// console.log(`Is 'SomeClass' an instance ? ${isInstance(SomeClass)} `);\r\n\r\n// [SomeClass, new SomeClass].forEach((value) => {\r\n\r\n//     console.log(`Static members: ${getStaticMembers(value)} `);\r\n//     console.log(`Static properties: ${getStaticProperties(value)} `);\r\n//     console.log(`Instance members: ${getInstanceMembers(value)} `);\r\n//     console.log(`Instance properties: ${getInstanceProperties(value)} `);\r\n// });\r\n\r\nconsole.log('\\nDone!');\r\n\r\n\r\n\r\n\r\n"],"names":["getStaticMembers","class_","Object","getOwnPropertyNames","getStaticProperties","filter","name","getInstanceMembers","prototype","getInstanceProperties","isClassConstructor","value","test","toString","isFunctionConstructor","canBeConstructed","canBeInstanciatedWithNew","getEnumerableProperties","obj","props","prop","push","SafeStrictMode","Ommitted","Symbol","Caller","Callee","Arguments","RestrictedMembers","assign","create","caller","key","callee","arguments","intercepetedValueMustMatchTarget","targetObjectPropertyDescriptor","undefined","writable","configurable","enumerable","intercepetedValueMustBeUndefined","get","looksLikeStrictModeFunction","looksLikeStrictModeFunctionArguments","shouldIntercept","proxyIfNeeded","thing","Proxy","target","receiver","propDesc","Reflect","getOwnPropertyDescriptor","specFailCount","replacementValue","strictModeGetOwnMembers","members","getOwnPropertySymbols","forEach","getAllMemberKeysAsSet","startLevel","maxLevel","Set","traversalLimit","Math","min","max","currentLevel","currentObj","_currentObj","ownKeys","p","add","getPrototypeOf","console","warn","getProtoypeChain","levelLimit","chain","length","String","constructor","reverse","join","ToStringFirstWord","inspect","result","_type","_thing","_suffix","_definition","end","indexOf","parts","substring","trim","split","part0","part1","stdBuiltIn","prefix","includes","_testRun_","fn","args","_testOut_","_testLog_","log","testResult","NamedFn","Function","AnonFn","FromCl","AbsCl","FromAbsCl","NaN","Number","BigInt","globalThis","item","index","replace","type","family","suffix","table","getAllMembersAsKvRecord","level","membersCount","membersAddedThisLevel","currentLevelName","propValue","propValueType","set","applyMixins","derivedCtor","baseCtors","baseCtorArgs","baseCtor","i","instance","descriptor","defineProperty","isLikelyConstructor","candidate","prototypeKeys","keys","isInstance","createObjectWithMethods","staticMethods","instanceMethods","describeComplexObject","anyToString","prettyPrintDiff","listA","listB","inAandB","intersection","onlyInA","difference","onlyInB","combined","union","Array","from","lineNrColWidth","typeColWidth","colWidth","arr","len","colSep","output","padEnd","slice","lineNr","each","onlyA","both","onlyB","SomeClass","staticMethod","instanceMethod","staticData","instanceData"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}